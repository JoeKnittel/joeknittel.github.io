install.packages("blogdown")
install.packages("blogdown")
library(blogdown)
blogdown::install_hugo()
options(tinytex.verbose = TRUE)
library(rmarkdown)
cls
convert_ipynb("Lorenze.ipynb", output = xfun::with_ext("Lorenz.ipynb", "Rmd"))
convert_ipynb("Lorenz.ipynb", output = xfun::with_ext("Lorenz.ipynb", "Rmd"))
rmarkdown::convert_ipynb("Lorenz.ipynb", output = xfun::with_ext("Lorenz.ipynb", "Rmd"))
r2jekyll("2021-01-13-R-Markdown.Rmd")
Rscript --vanilla r2jekyll.R 2021-01-13-R-Markdown.Rmd
rscript --vanilla r2jekyll.r "2021-01-13-R-Markdown.rmd"
rscript --vanilla r2jekyll.r "2021-01-13-R-Markdown.rmd"
rscript "--vanilla r2jekyll.r" "2021-01-13-R-Markdown.rmd"
rscript --vanilla r2jekyll.r 2021-01-13-R-Markdown.rmd
install.packages("esquisse")
cls
esquisse:::esquisser()
ggplot(mpg) +
aes(x = hwy, fill = model) +
geom_histogram(bins = 30L) +
scale_fill_hue() +
theme_minimal() +
facet_wrap(vars(manufacturer))
library(ggplot2)
ggplot(mpg) +
aes(x = hwy, fill = model) +
geom_histogram(bins = 30L) +
scale_fill_hue() +
theme_minimal() +
facet_wrap(vars(manufacturer))
esquisse:::esquisser()
esquisse:::esquisser()
economics_long
a <- economics_long
View(a)
esquisse:::esquisser()
esquisse:::esquisser()
esquisse:::esquisser()
esquisse:::esquisser()
library(ggplot2)
ggplot(a) +
aes(x = date, y = value01) +
geom_line(size = 1L, colour = "#0c4c8a") +
theme_minimal() +
facet_wrap(vars(variable))
esquisse:::esquisser()
View(a)
rm(a)
esquisse:::esquisser()
blogdown:::insert_image_addin()
bookdown:::mathquill()
bookdown:::serve_book()
bookdown
install.packages("addinslist")
library(addinslist)
addinslist:::addinslistAddin()
blogdown:::serve_site()
blogdown:::new_post_addin()
addinslist:::addinslistAddin()
library(blogdown)
remove.packages("blogdown", lib="~/R/win-library/4.0")
remove.packages("bookdown", lib="~/R/win-library/4.0")
giphyr:::gif_Addin()
giphyr:::gif_Addin()
colourpicker:::colourPickerAddin()
c("#FF7F24", "#FFFFFF", "#FFFFFF")
ermoji:::ermoji_gadget()
<U+274C>
<U+274C>
ermoji:::ermoji_gadget()
:grin:
ermoji:::ermoji_gadget()
install.packages("dash")
require(devtools)
install_github('rCharts', 'ramnathv')
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
require(devtools)
install_github('rCharts', 'ramnathv')
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages("rgl")
library(rgl)
data <- iris
mycolors <- c('royalblue1', darkcyan', oldlace')
mycolors <- c('royalblue1', 'darkcyan', 'oldlace')
cls
data$color <- mycolors[as.numeric(data$Species)]
View(data)
as.numeric(data$Species)
mycolors[as.numeric(data$Species)]
par(mar=c(0,0,0,0))
plot3d(
x=data$`Sepal.Length`,y=data$`Sepal.Width`,z=data$`Petal.Length`,
col = data$color,
type = 's',
radius = .1,
xlab = "Sepal Length", ylab = "Sepal Width", zlab = "Petal Length")
writeWebGL(filename="HTMLWidget/3dscatter.html", width = 600, height = 600)
writeWebGL(filename="3dscatter.html", width = 600, height = 600)
install.packages("gganimate")
library(ggplot2)
library(plotly)
library(gapminder)
p <- gapminder %>% filter(year==1977) %>% ggplot(aes(gdpPercap, lifeExp, size = pop, color = continent)) + geom_point() + theme_bw()
ggplotly(p)
p <- gapminder %>% filter(year==1977) %>% ggplot(aes(ln(gdpPercap), lifeExp, size = pop, color = continent)) + geom_point() + theme_bw()
ggplotly(p)
log(10)
p <- gapminder %>% filter(year==1977) %>% ggplot(aes(log(gdpPercap), lifeExp, size = pop, color = continent)) + geom_point() + theme_bw()
ggplotly(p)
p
ggplotly(p)
gapminder
p <- gapminder %>% filter(year==2000) %>% ggplot(aes(log(gdpPercap), lifeExp, size = pop, color = continent)) + geom_point() + theme_bw()
data <- gapminder
p <- gapminder %>% filter(year==2007) %>% ggplot(aes(log(gdpPercap), lifeExp, size = pop, color = continent)) + geom_point() + theme_bw()
ggplotly(p)
p <- gapminder %>% filter(year==2007) %>% ggplot(aes(log(gdpPercap), lifeExp, size = pop, color = continent)) + geom_point() + theme_bw()
ggplotly(p)
install.packages("remotes")
install.packages("remotes")
remotes::install_github("ramnathv/rNVD3")
library(rNVD3)
hair_eye = subset(as.data.frame(HairEyeColor), Sex == "Female")
p1 <- nvd3Plot(Freq ~ Hair | Eye, data = hair_eye, type = 'multiBarChart')
p1$chart(color = c('brown', 'blue', '#594c26', 'green'))
p1
p1$save('haireye.html')
hair_eye = subset(as.data.frame(HairEyeColor), Sex == "Female")
p1 <- nvd3Plot(Freq ~ Hair | Eye, data = hair_eye, type = 'multiBarChart')
p1$chart(color = c('brown', 'blue', '#594c26', 'green'))
p1
p1$save('haireye.html')
p <- gapminder %>% filter(year==2007) %>% ggplot(aes(log(gdpPercap), lifeExp, size = pop as "Population", color = continent)) + geom_point() + theme_bw()
p <- gapminder %>% filter(year==2007) %>% ggplot(aes(log(gdpPercap), lifeExp, size = pop, color = continent)) + geom_point() + theme_bw()
p <- gapminder %>% filter(year==2007) %>% ggplot(aes(log(gdpPercap), lifeExp, size = pop as "Population", color = continent)) + geom_point() + theme_bw()
library(ggplot2)
p <- gapminder %>% filter(year==2007) %>% ggplot(aes(log(gdpPercap), lifeExp, size = pop, color = continent)) + geom_point() + theme_bw()
library(plotly)
p <- gapminder %>% filter(year==2007) %>% ggplot(aes(log(gdpPercap), lifeExp, size = pop, color = continent)) + geom_point() + theme_bw()
library(gapminder)
p <- gapminder %>% filter(year==2007) %>% ggplot(aes(log(gdpPercap), lifeExp, size = pop, color = continent)) + geom_point() + theme_bw()
p <- gapminder %>% filter(year==2007) %>% ggplot(aes(log(gdpPercap), lifeExp, size = pop as "Population", color = continent)) + geom_point() + theme_bw()
p <- gapminder %>% filter(year==2007) %>% ggplot(aes(log(gdpPercap), lifeExp, size = pop, color = continent)) + geom_point() + theme_bw()
ggplotly(p)
devtools::install_github("tutuchan/chartjs", ref = "dev")
devtools::install_github("tutuchan/chartjs", ref = "dev")
chartjs(mtcars, mpg, qsec, labels = row.names(mtcars)) %>%
cjsBar
chartjs(mtcars, mpg, qsec, labels = row.names(mtcars)) %>%
cjsBar
devtools::install_github("tutuchan/chartjs", ref = "dev")
devtools::install_github("tutuchan/chartjs", ref = "dev")
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages("highcharter")
install.packages("highcharter")
library(highcharter)
hchart(mpg, "point", hcaes(x = displ, y = cty, group = year))
hchart(mpg, "point", hcaes(x = displ, y = cty, group = year))
mpg
cars
data(mpg)
data(cars)
force(cars)
data("mpg", "diamonds", "economics_long", package = "ggplot2")
head(mpg)
hchart(mpg, "point", hcaes(x = displ, y = cty, group = year))
remotes::install_github("allisonhorst/palmerpenguins")
data(penguins, package = "palmerpenguins")
hchart(penguins, "scatter", hcaes(x = flipper_length_mm, y = bill_length_mm, group = species))
install.packages("leaflet")
install.packages("maggristr")
install.packages("maggritr")
install.packages("magrittr")
install.packages("magrittr")
include_url("https://joeknittel.github.io/plotly_test.html", width = 500)
cls
library(knitr)
include_url("https://joeknittel.github.io/plotly_test.html", width = "500px")
library(plotly)
library(gapminder)
df <- gapminder
fig <- df %>%
plot_ly(
x = ~gdpPercap,
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
fig <- fig %>% layout(
xaxis = list(
type = "log"
)
)
fig
library(plotly)
library(gapminder)
df <- gapminder
fig <- df %>%
plot_ly(
x = ~log(gdpPercap),
y = ~lifeExp,
size = ~pop,
color = ~continent,
frame = ~year,
text = ~country,
hoverinfo = "text",
type = 'scatter',
mode = 'markers'
)
fig <- fig %>% layout(
xaxis = list(
type = "log"
)
)
fig
